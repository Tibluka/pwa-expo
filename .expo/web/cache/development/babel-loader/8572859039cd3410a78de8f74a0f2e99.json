{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { Camera as ExpoCamera, CameraType } from 'expo-camera';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Camera = function Camera() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    members = _useState2[0],\n    setMembers = _useState2[1];\n  var _useState3 = useState(CameraType.back),\n    _useState4 = _slicedToArray(_useState3, 2),\n    type = _useState4[0],\n    setType = _useState4[1];\n  useEffect(function () {\n    fetch('https://api.github.com/orgs/rocketseat/members').then(function (response) {\n      response.json().then(function (data) {\n        setMembers(data);\n      });\n    });\n  }, []);\n  function alertQr(qrCode) {\n    alert(\"Code of type \" + qrCode.type + \" containing the following data: \" + qrCode.data);\n  }\n  function onError(error) {\n    alert(error);\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ExpoCamera, {\n      style: styles.camera,\n      type: type,\n      onBarCodeScanned: function onBarCodeScanned(qrCode) {\n        return alertQr(qrCode);\n      },\n      barCodeScannerSettings: {\n        barCodeTypes: [BarCodeScanner.Constants.BarCodeType.qr]\n      },\n      onMountError: function onMountError(error) {\n        return onError(error);\n      }\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  camera: {\n    flex: 1\n  },\n  buttonContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    backgroundColor: 'transparent',\n    margin: 64\n  },\n  button: {\n    flex: 1,\n    alignSelf: 'flex-end',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});\nexport default Camera;","map":{"version":3,"names":["React","useEffect","useState","BarCodeScanner","Camera","ExpoCamera","CameraType","members","setMembers","back","type","setType","fetch","then","response","json","data","alertQr","qrCode","alert","onError","error","styles","container","camera","barCodeTypes","Constants","BarCodeType","qr","StyleSheet","create","flex","justifyContent","buttonContainer","flexDirection","backgroundColor","margin","button","alignSelf","alignItems","text","fontSize","fontWeight","color"],"sources":["/Users/lucasgomes/Desktop/Projects/Agacode/POCS/pwa-expo/src/pages/Camera.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, FlatList, Image, Text, StyleSheet } from 'react-native';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport { Camera as ExpoCamera, CameraType } from 'expo-camera';\n\ninterface Member {\n    login: string;\n    avatar_url: string;\n}\n\nconst Camera: React.FC = () => {\n    const [members, setMembers] = useState<Member[]>([]);\n    const [type, setType] = useState(CameraType.back);\n\n    useEffect(() => {\n        fetch('https://api.github.com/orgs/rocketseat/members').then((response) => {\n            response.json().then((data) => {\n                setMembers(data);\n            })\n        })\n    }, [])\n\n    function alertQr(qrCode: any) {\n        alert(`Code of type ${qrCode.type} containing the following data: ${qrCode.data}`)\n    }\n\n    function onError(error: any) {\n        alert(error)\n    }\n\n\n    return (\n        <View style={styles.container}>\n        <ExpoCamera style={styles.camera} type={type}\n            onBarCodeScanned={(qrCode) => alertQr(qrCode)}\n            barCodeScannerSettings={{\n                barCodeTypes: [BarCodeScanner.Constants.BarCodeType.qr],\n            }}\n            onMountError={(error) => onError(error)}>\n        </ExpoCamera>\n    </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n    },\n    camera: {\n        flex: 1,\n    },\n    buttonContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        backgroundColor: 'transparent',\n        margin: 64,\n    },\n    button: {\n        flex: 1,\n        alignSelf: 'flex-end',\n        alignItems: 'center',\n    },\n    text: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        color: 'white',\n    },\n});\n\nexport default Camera\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEnD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,MAAM,IAAIC,UAAU,EAAEC,UAAU,QAAQ,aAAa;AAAC;AAO/D,IAAMF,MAAgB,GAAG,SAAnBA,MAAgB,GAAS;EAC3B,gBAA8BF,QAAQ,CAAW,EAAE,CAAC;IAAA;IAA7CK,OAAO;IAAEC,UAAU;EAC1B,iBAAwBN,QAAQ,CAACI,UAAU,CAACG,IAAI,CAAC;IAAA;IAA1CC,IAAI;IAAEC,OAAO;EAEpBV,SAAS,CAAC,YAAM;IACZW,KAAK,CAAC,gDAAgD,CAAC,CAACC,IAAI,CAAC,UAACC,QAAQ,EAAK;MACvEA,QAAQ,CAACC,IAAI,EAAE,CAACF,IAAI,CAAC,UAACG,IAAI,EAAK;QAC3BR,UAAU,CAACQ,IAAI,CAAC;MACpB,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,OAAO,CAACC,MAAW,EAAE;IAC1BC,KAAK,mBAAiBD,MAAM,CAACR,IAAI,wCAAmCQ,MAAM,CAACF,IAAI,CAAG;EACtF;EAEA,SAASI,OAAO,CAACC,KAAU,EAAE;IACzBF,KAAK,CAACE,KAAK,CAAC;EAChB;EAGA,OACI,KAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,UAC9B,KAAC,UAAU;MAAC,KAAK,EAAED,MAAM,CAACE,MAAO;MAAC,IAAI,EAAEd,IAAK;MACzC,gBAAgB,EAAE,0BAACQ,MAAM;QAAA,OAAKD,OAAO,CAACC,MAAM,CAAC;MAAA,CAAC;MAC9C,sBAAsB,EAAE;QACpBO,YAAY,EAAE,CAACtB,cAAc,CAACuB,SAAS,CAACC,WAAW,CAACC,EAAE;MAC1D,CAAE;MACF,YAAY,EAAE,sBAACP,KAAK;QAAA,OAAKD,OAAO,CAACC,KAAK,CAAC;MAAA;IAAC;EAC/B,EACV;AAEX,CAAC;AAED,IAAMC,MAAM,GAAGO,UAAU,CAACC,MAAM,CAAC;EAC7BP,SAAS,EAAE;IACPQ,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE;EACpB,CAAC;EACDR,MAAM,EAAE;IACJO,IAAI,EAAE;EACV,CAAC;EACDE,eAAe,EAAE;IACbF,IAAI,EAAE,CAAC;IACPG,aAAa,EAAE,KAAK;IACpBC,eAAe,EAAE,aAAa;IAC9BC,MAAM,EAAE;EACZ,CAAC;EACDC,MAAM,EAAE;IACJN,IAAI,EAAE,CAAC;IACPO,SAAS,EAAE,UAAU;IACrBC,UAAU,EAAE;EAChB,CAAC;EACDC,IAAI,EAAE;IACFC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACX;AACJ,CAAC,CAAC;AAEF,eAAevC,MAAM"},"metadata":{},"sourceType":"module"}